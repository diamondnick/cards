"use strict";function Situation(a,b,c,d){this.face=a,this.card1=a.substring(0,1).toUpperCase(),this.card2=a.substring(1,2).toUpperCase(),this.unraisedPot=b,this.raisedPot=c,this.position=d,this.suited="S"==a.substring(2,3).toUpperCase()?"suited":"unsuited",this.same=this.card1==this.card2,this.showDiffCards=this.same||!this.suited,this.positionAbbr=d.substring(0,1).toUpperCase(),this.hasNumber=!(isNaN(this.card1)&&isNaN(this.card2)),this.show=!1,this.wildCardMatch=!1,this.exactMatch=!1,this.isMatch=function(a){var b=this.isWildCardMatch(a.card1,a.card2,a.position),c=this.isExactMatch(a.card1,a.card2,a.position);return c||b},this.exactMatch=function(a,b){var c=a==this.card1&&b==this.card2;return c},this.wildcardMatch=function(a,b){var c=!1;return isNaN(a)||"#"!=this.card1&&"#"!=this.card2||(this.card1==b||this.card2==b)&&(c=!0),a||(this.card1==b||this.card2==b)&&(c=!0),c},this.isWildCardMatch=function(a,b,c){return(!c||this.position==c)&&(this.wildcardMatch(a,b)||this.wildcardMatch(b,a))},this.isExactMatch=function(a,b,c){return(!c||this.position==c)&&(this.exactMatch(a,b)||this.exactMatch(b,a))}}function SituationQuery(a){this.isValidPosition=function(a){return-1!="EMLBS".indexOf(a)},this.positionMap=[],this.positionMap.E="Early",this.positionMap.M="Middle",this.positionMap.L="Late",this.positionMap.B="Big",this.positionMap.S="Small",this.position="";var b=a.toUpperCase().substring(0,1),c=a.toUpperCase().substring(1,2),d=a.toUpperCase().substring(2,3);this.isValidPosition(b)?(this.position=b,this.card1=c,this.card2=d):(this.position="",this.card1=b,this.card2=c)}function SituationService(){this.filterSituations=function(a,b){var c=[];if(b){var d=new SituationQuery(b);angular.forEach(a,function(a){a.isMatch(d)&&c.push(a)})}return c},this.getSituationByPosition=function(a,b,c){var d=b.map(function(b){return new Situation(b[0],b[c],b[c+1],a)});return d},this.getAllSituations=function(a){var b=[];try{b=this.getSituationByPosition("E",a,3),b=b.concat(this.getSituationByPosition("M",a,1)),b=b.concat(this.getSituationByPosition("L",a,5)),b=b.concat(this.getSituationByPosition("S",a,7)),b=b.concat(this.getSituationByPosition("B",a,9))}catch(c){console.log(c)}return b}}var R="Raise",B="Bet",F="Fold",RR="Reraise",RRL="Reraise and Raise Limpers",RFI="Raise first in, otherwise call",RFIC1="Raise if first one in, Call 1 or more callers",RFIOF="Raise if first one in, Fold if any calls",C="Call",R1C2="Raise if 1 caller, Call 2 or more callers",RRLC3="RR a lone late position player, Call 3+ players",RRLC1="RR a lone late position player,  Call 1+",RRLF="RR a lone late postion player, otherwise Fold",R12C3="Raise 1 or 2 callers, Call 3+ callers ",RR12C3="Reraise 1 or 2 callers, Call 3+ callers",RR1C2="Reraise one caller, Call 2+ callers",C1="Call if 1+ callers in pot",C2="Call if 2+ callers in pot",C3="Call if 3+ callers in pot",C4="Call if 4+ callers in pot",C5="Call if 5+ callers in pot",C21L="Call if 2+ callers or 1 Late postion better",C41L="Call if 4+ callers or 1 Late postion better",CH="Check",CR1L="Call, Raise if only 1 Limper in pot",C21ML="Call 2+, or 1 Middle or Late raiser",C21L="Call 2+, or 1 Late raiser",CR12L="Call (Raise 1 in or 2 Limpers in pot)",C1LF="Call 1 Late, Fold",RROPCA="Reraise 1 Opt, Call All",RRF1C3="Reraise or Fold vs only 1 player, Call if 3+ players in hand",EMPTY="",cardArray=[["AA",R,RR,R,RR,R,RR,R,RR,EMPTY,RRL],["KK",R,RR,R,RR,R,RR,R,RR,EMPTY,RRL],["QQ",R,RR,R,RR,R,RR,R,RR,EMPTY,RRL],["JJ",RFIC1,C,C,C,R1C2,RROPCA,R1C2,RR1C2,EMPTY,CR1L],["TT",RFIC1,F,C,F,R1C2,RROPCA,R1C2,RR1C2,EMPTY,C],["99",C,F,C,F,RFIC1,RRF1C3,R1C2,RR1C2,EMPTY,C],["88",C1,F,C1,F,RFIC1,C3,C,RRLC3,EMPTY,C21ML],["77",C1,F,C1,F,RFIC1,C3,C,RRLC3,EMPTY,C21ML],["66",C2,F,F,F,C2,C4,C,C3,EMPTY,C21L],["55",C2,F,F,F,C2,C4,C,C3,EMPTY,C21L],["44",C3,F,F,F,C3,C4,C,C3,EMPTY,C2],["33",C3,F,F,F,C3,C4,C,C3,EMPTY,C2],["22",C3,F,F,F,C3,C4,C,C3,EMPTY,C2],["AK",R,RR,R,RR,R,RR,R,RR,EMPTY,RRL],["AQ",R,C,R,C,R,RROPCA,R12C3,RR12C3,EMPTY,CR12L],["AJs",R,C,R,C,R,RROPCA,R1C2,RRLC1,EMPTY,C],["AJ",RFIC1,F,C,F,R1C2,F,R1C2,RRLF,EMPTY,C],["ATs",RFIC1,F,C,F,R1C2,F,R1C2,RRLC1,EMPTY,C],["AT",RFIC1,F,F,F,RFIC1,F,R1C2,RRLF,EMPTY,C],["A9s",C,F,C,F,RFIC1,F,C,RRLF,EMPTY,C],["A9",F,F,F,F,RFIOF,F,C,F,EMPTY,C1LF],["A8s",C,F,C1,F,RFIC1,F,C,F,EMPTY,C1LF],["A8",F,F,F,F,F,F,C,F,EMPTY,C1LF],["A7s",C,F,C1,F,F,F,C,F,EMPTY,C],["A#s",C1,F,F,F,RFIC1,F,C,F,EMPTY,C],["A#",F,F,F,F,F,F,C,F,EMPTY,F],["KQs",C,F,C,F,R1C2,C,C,C21L,EMPTY,C],["KQ",C,F,F,F,RFIC1,F,C,F,EMPTY,C],["KJs",C,F,C1,F,RFIC1,F,C,C41L,EMPTY,C],["KJ",F,F,F,F,RFIC1,F,C,F,EMPTY,C21L],["KTs",C1,F,F,F,RFIC1,F,C,F,EMPTY,C],["KT",F,F,F,F,C2,F,C,F,EMPTY,C21L],["K9s",F,F,F,F,C2,F,C,F,EMPTY,C],["K8s",F,F,F,F,C3,F,C,F,EMPTY,C3],["K7s",F,F,F,F,C3,F,C,F,EMPTY,C3],["K#s",F,F,F,F,C4,F,C,F,EMPTY,C3],["QJs",C,F,C1,F,RFIC1,C4,C,C4,EMPTY,C],["QJ",F,F,F,F,RFIC1,F,C,F,EMPTY,C],["QTs",C,F,F,F,RFIC1,F,C,F,EMPTY,C],["QT",F,F,F,F,C2,F,C,F,EMPTY,C],["Q9s",F,F,F,F,C2,F,C,F,EMPTY,C21L],["Q8s",F,F,F,F,C4,F,C,F,EMPTY,C21L],["Q#s",F,F,F,F,F,F,C3,F,EMPTY,C3],["JTs",C,F,F,F,RFIC1,C4,C,C4,EMPTY,C],["JT",F,F,F,F,C3,F,C,F,EMPTY,C2],["J9s",C,F,F,F,C2,F,C,F,EMPTY,C2],["J8s",F,F,F,F,C4,F,C,F,EMPTY,C3],["J7s",F,F,F,F,F,F,C3,F,EMPTY,C5],["T9s",C,F,F,F,C2,C5,C,C5,EMPTY,C2],["T9",F,F,F,F,F,F,C,F,EMPTY,C3],["T8s",F,F,F,F,C3,F,C,F,EMPTY,C3],["T7s",F,F,F,F,F,F,C3,F,EMPTY,C4],["98s",C,F,F,F,C3,C5,C,F,EMPTY,C],["98",F,F,F,F,F,C5,C3,F,EMPTY,C3],["97s",F,F,F,F,F,F,C3,F,EMPTY,C3],["96s",F,F,F,F,F,F,C4,F,EMPTY,C5],["87s",F,F,F,F,C4,F,C,F,EMPTY,C3],["87",F,F,F,F,F,F,C3,F,EMPTY,C4],["86s",F,F,F,F,F,F,C3,F,EMPTY,C4],["85s",F,F,F,F,F,F,C4,F,EMPTY,F],["76s",F,F,F,F,C4,F,C,F,EMPTY,C3],["76",F,F,F,F,F,F,C3,F,EMPTY,C3],["75s",F,F,F,F,F,F,C3,F,EMPTY,C4],["65s",F,F,F,F,F,F,C2,F,EMPTY,C3],["65",F,F,F,F,F,F,C3,F,EMPTY,F],["64s",F,F,F,F,F,F,C3,F,EMPTY,F],["54s",F,F,F,F,F,F,C2,F,EMPTY,C4],["54",F,F,F,F,F,F,C4,F,EMPTY,F],["53s",F,F,F,F,F,F,C4,F,EMPTY,F],["43s",F,F,F,F,F,F,C4,F,EMPTY,F],["32s",F,F,F,F,F,F,C4,F,EMPTY,F]],cardsApp=angular.module("cardsApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]);cardsApp.config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/preflop.html",controller:"PreflopController"})}]),cardsApp.filter("situationFilter",["CardService",function(a){return function(b,c){return a.filterSituations(b,c)}}]),cardsApp.service("CardService",function(){var a=new SituationService;this.getAllSituations=function(){return a.getAllSituations(cardArray)},this.filterSituations=function(b,c){return a.filterSituations(b,c)}}),cardsApp.controller("PreflopController",["$scope","CardService",function(a,b){a.items=b.getAllSituations()}]);